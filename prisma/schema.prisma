generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SearchConfig {
  id              String   @id @default(cuid())
  keyword         String
  location        String
  experienceLevel String
  remote          String
  jobType         String
  easyApply       Boolean  @default(false)
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("search_configs")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String   @id @default(cuid())
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  password      String?  // For credentials provider
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires   DateTime

  @@unique([identifier, token])
}

model Job {
  id              String    @id @default(cuid())
  title           String
  company         String
  location        String?
  description     String?
  url             String    @unique
  score           Float?
  coverLetter     String?
  salary          String?
  experienceLevel String?
  remote          String?
  jobType         String?
  easyApply       Boolean   @default(false)
  postedDate      String?
  appliedDate     DateTime?
  status          String    @default("new")
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("jobs")
}
